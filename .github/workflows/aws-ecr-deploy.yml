name: Push to Amazon ECR

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up QEMU for Docker buildx
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Show version label
        run: echo ${{ github.run_number }}-${{ github.run_attempt }}-${{ github.sha }}

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ secrets.ECR_REGISTRY }}
          REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.run_number }}-${{ github.run_attempt }}-${{ github.sha }}
        run: |
          echo "Building the Docker image..."
          docker version
          docker info
          echo "REGISTRY/REPOSITORY:IMAGE_TAG -> $REGISTRY/$REPOSITORY:$IMAGE_TAG"
          docker build --build-arg arch=amd64 --tag $REGISTRY/$REPOSITORY:$IMAGE_TAG --tag $REGISTRY/$REPOSITORY:latest .
          docker push $REGISTRY/$REPOSITORY --all-tags

      - name: Update ECS service
        env:
          AWS_DEFAULT_REGION: eu-north-1
          ECS_CLUSTER: ${{ secrets.ECS_CLUSTER }}
          ECS_SERVICE: ${{ secrets.ECS_SERVICE }}
        run: |
          aws ecs describe-services --cluster $ECS_CLUSTER --services $ECS_SERVICE --query "services[0].taskDefinition" --output text > arn.txt
          aws ecs describe-task-definition --task-definition $(cat arn.txt) > task-definition.json
          aws ecs update-service --cluster $ECS_CLUSTER --service $ECS_SERVICE --force-new-deployment --region $AWS_DEFAULT_REGION --output json
